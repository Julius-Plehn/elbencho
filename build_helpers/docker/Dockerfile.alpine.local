# Elbencho main executable from local source code on Alpine Linux for minimum image size
# This uses mimalloc to overcome the malloc performance issues with musl-libc, which otherwise
# would reduce S3 performance.
#
# Run docker build from elbencho repository root dir like this:
# docker build -t elbencho-local -f build_helpers/docker/Dockerfile.alpine.local .

FROM alpine:3 as builder

ARG NUM_JOBS
ENV NUM_JOBS=${NUM_JOBS}

RUN apk add bash boost-dev cmake curl-dev gcc g++ git libaio-dev make \
        numactl-dev ncurses ncurses-dev sudo

COPY ./ /root/elbencho

RUN cd /root/elbencho && \
    RAM_GB=$(grep MemTotal /proc/meminfo | awk '{printf "%."d"f\n", $2 / 1024 / 1024}') && \
    RAM_GB=$((RAM_GB > 1 ? RAM_GB : 1)) && \
    NUM_JOBS_CALCULATED=$(( $(nproc) > RAM_GB ? RAM_GB : $(nproc) )) && \
    : "${NUM_JOBS:=$NUM_JOBS_CALCULATED}" && \
    echo "NUM_JOBS: $NUM_JOBS." \
        "(NUM_JOBS_CALCULATED: $NUM_JOBS_CALCULATED, RAM_GB: $RAM_GB, nproc: $(nproc))" && \
    DOCKER_BUILD_PLATFORM=$(uname -m) && \
    echo "[PLATFORM] $DOCKER_BUILD_PLATFORM" && \
    make clean-all && \
    make BACKTRACE_SUPPORT=0 S3_SUPPORT=1 USE_MIMALLOC=1 -j $NUM_JOBS && \
    make install

FROM alpine:3

COPY --from=builder /usr/local/bin/elbencho /usr/local/bin

RUN apk add boost-regex boost-program_options libaio libcurl libstdc++ ncurses \
        numactl && \
    ln -s /usr/local/bin/elbencho /usr/bin/elbencho && \
    /usr/local/bin/elbencho --version

ENTRYPOINT ["/usr/local/bin/elbencho"]

# Full elbencho deb install of latest github master on Ubuntu 24.04
#
# Run docker build from elbencho repository root dir like this:
# docker build -t elbencho-local -f build_helpers/docker/Dockerfile.ubuntu2204.local .

FROM ubuntu:24.04 as builder

ARG NUM_JOBS
ENV NUM_JOBS=${NUM_JOBS}

COPY ./ /root/elbencho

# Note: Cross-compile is mem intensive, so limit to one proc per GB RAM

RUN export DEBIAN_FRONTEND=noninteractive && \
    RAM_GB=$(grep MemTotal /proc/meminfo | awk '{printf "%."d"f\n", $2 / 1024 / 1024}') && \
    RAM_GB=$((RAM_GB > 1 ? RAM_GB : 1)) && \
    NUM_JOBS_CALCULATED=$(( $(nproc) > RAM_GB ? RAM_GB : $(nproc) )) && \
    : "${NUM_JOBS:=$NUM_JOBS_CALCULATED}" && \
    echo "NUM_JOBS: $NUM_JOBS." \
        "(NUM_JOBS_CALCULATED: $NUM_JOBS_CALCULATED, RAM_GB: $RAM_GB, nproc: $(nproc))" && \
    DOCKER_BUILD_PLATFORM=$(uname -m) && \
    echo "[PLATFORM] $DOCKER_BUILD_PLATFORM" && \
    apt update && \
    apt -y upgrade && \
    apt install -y build-essential cmake debhelper devscripts fakeroot git libaio-dev libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev libcurl4-openssl-dev libncurses-dev libnuma-dev libssl-dev lintian uuid-dev zlib1g-dev && \
    cd /root/elbencho && \
    make S3_SUPPORT=1 -j $NUM_JOBS && \
    make deb

FROM ubuntu:24.04

COPY --from=builder /root/elbencho/packaging/elbencho*.deb /tmp/

RUN export DEBIAN_FRONTEND=noninteractive && \
    apt update && \
    apt install -y /tmp/elbencho*.deb && \
    rm -f /tmp/elbencho*.deb && \
    apt clean all && \
    /usr/bin/elbencho --version

ENTRYPOINT ["/usr/bin/elbencho"]
